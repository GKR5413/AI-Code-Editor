# Multi-language Compiler Service
# This container includes compilers for all major programming languages
FROM ubuntu:22.04

# Prevent interactive prompts during package installation
ENV DEBIAN_FRONTEND=noninteractive
ENV TZ=UTC

# Set working directory
WORKDIR /app

# Update package list and install essential tools
RUN apt-get update && apt-get install -y \
    curl \
    wget \
    git \
    build-essential \
    software-properties-common \
    apt-transport-https \
    ca-certificates \
    gnupg \
    lsb-release \
    unzip \
    vim \
    nano \
    tree \
    htop \
    && rm -rf /var/lib/apt/lists/*

# ============= NODE.JS & NPM =============
RUN curl -fsSL https://deb.nodesource.com/setup_20.x | bash - \
    && apt-get install -y nodejs

# ============= PYTHON =============
RUN apt-get update && apt-get install -y \
    python3 \
    python3-pip \
    python3-dev \
    python3-venv \
    && rm -rf /var/lib/apt/lists/*

# ============= JAVA =============
RUN apt-get update && apt-get install -y \
    openjdk-11-jdk \
    openjdk-17-jdk \
    openjdk-21-jdk \
    maven \
    gradle \
    && rm -rf /var/lib/apt/lists/*

# ============= GO =============
RUN wget https://go.dev/dl/go1.21.5.linux-amd64.tar.gz \
    && tar -C /usr/local -xzf go1.21.5.linux-amd64.tar.gz \
    && rm go1.21.5.linux-amd64.tar.gz
ENV PATH="/usr/local/go/bin:${PATH}"

# ============= RUST =============
RUN curl --proto '=https' --tlsv1.2 -sSf https://sh.rustup.rs | sh -s -- -y \
    && . ~/.cargo/env
ENV PATH="/root/.cargo/bin:${PATH}"

# ============= C# / .NET =============
RUN wget https://packages.microsoft.com/config/ubuntu/22.04/packages-microsoft-prod.deb -O packages-microsoft-prod.deb \
    && dpkg -i packages-microsoft-prod.deb \
    && rm packages-microsoft-prod.deb \
    && apt-get update \
    && apt-get install -y dotnet-sdk-8.0 \
    && rm -rf /var/lib/apt/lists/*

# ============= PHP =============
RUN apt-get update && apt-get install -y \
    php8.1 \
    php8.1-cli \
    php8.1-common \
    php8.1-curl \
    php8.1-mbstring \
    php8.1-xml \
    composer \
    && rm -rf /var/lib/apt/lists/*

# ============= RUBY =============
RUN apt-get update && apt-get install -y \
    ruby \
    ruby-dev \
    gem \
    && rm -rf /var/lib/apt/lists/*

# ============= DART & FLUTTER =============
RUN git clone https://github.com/flutter/flutter.git -b stable --depth 1 /opt/flutter
ENV PATH="/opt/flutter/bin:${PATH}"
RUN flutter doctor --android-licenses || true

# ============= KOTLIN =============
RUN curl -s https://get.sdkman.io | bash \
    && bash -c "source ~/.sdkman/bin/sdkman-init.sh && sdk install kotlin"
ENV PATH="/root/.sdkman/candidates/kotlin/current/bin:${PATH}"

# ============= SWIFT =============
RUN apt-get update && apt-get install -y \
    binutils \
    libc6-dev \
    libcurl4-openssl-dev \
    libedit2 \
    libgcc-9-dev \
    libpython3.8 \
    libsqlite3-0 \
    libstdc++-9-dev \
    libxml2-dev \
    libz3-dev \
    pkg-config \
    tzdata \
    uuid-dev \
    zlib1g-dev \
    && rm -rf /var/lib/apt/lists/*

RUN wget https://download.swift.org/swift-5.9.1-release/ubuntu2204/swift-5.9.1-RELEASE/swift-5.9.1-RELEASE-ubuntu22.04.tar.gz \
    && tar xzf swift-5.9.1-RELEASE-ubuntu22.04.tar.gz \
    && mv swift-5.9.1-RELEASE-ubuntu22.04 /opt/swift \
    && rm swift-5.9.1-RELEASE-ubuntu22.04.tar.gz
ENV PATH="/opt/swift/usr/bin:${PATH}"

# ============= HASKELL =============
RUN apt-get update && apt-get install -y \
    haskell-platform \
    && rm -rf /var/lib/apt/lists/*

# ============= SCALA =============
RUN bash -c "source ~/.sdkman/bin/sdkman-init.sh && sdk install scala"
ENV PATH="/root/.sdkman/candidates/scala/current/bin:${PATH}"

# ============= LUA =============
RUN apt-get update && apt-get install -y \
    lua5.4 \
    luarocks \
    && rm -rf /var/lib/apt/lists/*

# ============= PERL =============
RUN apt-get update && apt-get install -y \
    perl \
    cpanminus \
    && rm -rf /var/lib/apt/lists/*

# ============= R =============
RUN apt-get update && apt-get install -y \
    r-base \
    r-base-dev \
    && rm -rf /var/lib/apt/lists/*

# ============= JULIA =============
RUN wget https://julialang-s3.julialang.org/bin/linux/x64/1.9/julia-1.9.4-linux-x86_64.tar.gz \
    && tar xzf julia-1.9.4-linux-x86_64.tar.gz \
    && mv julia-1.9.4 /opt/julia \
    && rm julia-1.9.4-linux-x86_64.tar.gz
ENV PATH="/opt/julia/bin:${PATH}"

# ============= ASSEMBLY (NASM) =============
RUN apt-get update && apt-get install -y \
    nasm \
    yasm \
    && rm -rf /var/lib/apt/lists/*

# ============= FORTRAN =============
RUN apt-get update && apt-get install -y \
    gfortran \
    && rm -rf /var/lib/apt/lists/*

# ============= COBOL =============
RUN apt-get update && apt-get install -y \
    gnucobol4 \
    && rm -rf /var/lib/apt/lists/*

# ============= ADDITIONAL TOOLS =============
# Install additional development tools
RUN apt-get update && \
    apt-get install -y gnupg curl && \
    curl -fsSL https://pgp.mongodb.com/server-6.0.asc | \
    gpg -o /usr/share/keyrings/mongodb-server-6.0.gpg --dearmor && \
    echo "deb [ arch=amd64,arm64 signed-by=/usr/share/keyrings/mongodb-server-6.0.gpg ] https://repo.mongodb.org/apt/ubuntu jammy/mongodb-org/6.0 multiverse" | \
    tee /etc/apt/sources.list.d/mongodb-org-6.0.list && \
    apt-get update && \
    apt-get install -y \
    sqlite3 \
    redis-server \
    postgresql-client \
    mysql-client \
    mongodb-org-tools \
    && rm -rf /var/lib/apt/lists/*

# Create directories for compilation
RUN mkdir -p /app/workspace /app/output /app/temp

# Copy compiler service
COPY compiler-service/ /app/

# Install Node.js dependencies for the compiler service
RUN npm install

# Expose port for the compiler service
EXPOSE 3002

# Health check
HEALTHCHECK --interval=30s --timeout=10s --start-period=5s --retries=3 \
    CMD curl -f http://localhost:3002/health || exit 1

# Start the compiler service
CMD ["node", "server.js"]